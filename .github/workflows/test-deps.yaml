name: Test - Dependencies
on:
  workflow_call:
  workflow_dispatch:  # to trigger manually

jobs:
  jax:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        jax-version: [ 0.4.30 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install packages
        run: |
          poetry run make config-poetry
          poetry run make install

      - name: Install jax
        run: |
          poetry run pip install jax==${{ matrix.jax-version }} jaxlib==${{ matrix.jax-version }}

      - name: Show installed packages
        run: |
          poetry run poetry show
          poetry run poetry show --tree

      - name: Run unit tests
        run: |
          poetry run make unit-test-cov


  numpy:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        numpy-version: [ 2.0.1, 1.26.4, 1.25.2, 1.24.3, 1.23.5, 1.22.4, 1.21.6 ]
        exclude:
          # python 3.11
          - numpy-version: 1.21.6
            python-version: '3.11'
          # python 3.12
          - numpy-version: 1.21.6
            python-version: '3.12'
          - numpy-version: 1.22.4
            python-version: '3.12'
          - numpy-version: 1.23.5
            python-version: '3.12'
          - numpy-version: 1.24.3
            python-version: '3.12'
          - numpy-version: 1.25.2
            python-version: '3.12'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install packages
        run: |
          poetry run make config-poetry
          poetry run make install

      - name: Install NumPy
        run: |
          poetry run pip install numpy==${{ matrix.numpy-version }}

      - name: Show installed packages
        run: |
          poetry run poetry show
          poetry run poetry show --tree

      - name: Run unit tests
        run: |
          poetry run make unit-test-cov


  packaging:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        packaging-version: [ '24.1', '23.2', '22.0', '21.3' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install packages
        run: |
          poetry run make config-poetry
          poetry run make install

      - name: Install packaging
        run: |
          poetry run pip install packaging==${{ matrix.packaging-version }}

      - name: Show installed packages
        run: |
          poetry run poetry show
          poetry run poetry show --tree

      - name: Run unit tests
        run: |
          poetry run make unit-test-cov


  pandas:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        pandas-version: [ 2.2.2, 2.1.4, 2.0.3, 1.5.3, 1.4.4, 1.3.5 ]
        exclude:
          # python 3.12
          - pandas-version: 1.4.4
            python-version: '3.12'
          - pandas-version: 1.3.5
            python-version: '3.12'
          - pandas-version: 1.3.5
            python-version: '3.12'
          - pandas-version: 1.4.4
            python-version: '3.12'
          - pandas-version: 1.5.3
            python-version: '3.12'
          - pandas-version: 2.0.3
            python-version: '3.12'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install packages
        run: |
          poetry run make config-poetry
          poetry run make install

      - name: Install pandas
        run: |
          poetry run python -c "from feu import install_package; install_package('pandas', '${{ matrix.pandas-version }}')"

      - name: Show installed packages
        run: |
          poetry run poetry show
          poetry run poetry show --tree

      - name: Run unit tests
        run: |
          poetry run make unit-test-cov


  polars:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        polars-version: [ 1.4.1, 1.0.0, 0.20.31, 0.19.19, 0.18.15 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install packages
        run: |
          poetry run make config-poetry
          poetry run make install

      - name: Install polars
        run: |
          poetry run pip install polars==${{ matrix.polars-version }}

      - name: Show installed packages
        run: |
          poetry run poetry show
          poetry run poetry show --tree

      - name: Run unit tests
        run: |
          poetry run make unit-test-cov


  pyarrow:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        pyarrow-version: [ 17.0.0, 16.1.0, 15.0.2, 14.0.2, 13.0.0, 12.0.1, 11.0.0, 10.0.1 ]
        exclude:
          # python 3.9
          - pyarrow-version: 1.17.0
            python-version: '3.9'
          # python 3.12
          - pyarrow-version: 13.0.0
            python-version: '3.12'
          - pyarrow-version: 12.0.1
            python-version: '3.12'
          - pyarrow-version: 11.0.0
            python-version: '3.12'
          - pyarrow-version: 10.0.1
            python-version: '3.12'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install packages
        run: |
          poetry run make config-poetry
          poetry run make install

      - name: Install pyarrow
        run: |
          poetry run python -c "from feu import install_package; install_package('pyarrow', '${{ matrix.pyarrow-version }}')"

      - name: Show installed packages
        run: |
          poetry run poetry show
          poetry run poetry show --tree

      - name: Run unit tests
        run: |
          poetry run make unit-test-cov


  torch:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        torch-version: [ 2.4.0, 2.3.1, 2.2.2, 2.1.2, 2.0.1, 1.13.1, 1.12.1, 1.11.0 ]
        exclude:
          # python 3.11
          - torch-version: 1.11.0
            python-version: 3.11
          - torch-version: 1.12.1
            python-version: 3.11
          # python 3.12
          - torch-version: 1.11.0
            python-version: 3.12
          - torch-version: 1.12.1
            python-version: 3.12
          - torch-version: 1.13.1
            python-version: 3.12
          - torch-version: 2.0.1
            python-version: 3.12
          - torch-version: 2.1.2
            python-version: 3.12

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install packages
        run: |
          poetry run make config-poetry
          poetry run make install

      - name: Install PyTorch
        run: |
          poetry run pip install torch==${{ matrix.torch-version }}

      - name: Show installed packages
        run: |
          poetry run poetry show
          poetry run poetry show --tree

      - name: Run unit tests
        run: |
          poetry run make unit-test-cov


  xarray:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        xarray-version: [ '2024.7', '2024.6', '2024.5', '2024.3', '2024.2', '2024.1', '2023.12', '2023.11', '2023.10', '2023.9', '2023.8', '2023.1' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install packages
        run: |
          poetry run make config-poetry
          poetry run make install

      - name: Install xarray
        run: |
          poetry run python -c "from feu import install_package; install_package('xarray', '${{ matrix.xarray-version }}')"

      - name: Show installed packages
        run: |
          poetry run poetry show
          poetry run poetry show --tree

      - name: Run unit tests
        run: |
          poetry run make unit-test-cov
